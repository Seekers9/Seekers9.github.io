<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>解决hexo博客图片无法加载问题</title>
    <link href="/2022/07/18/%E8%A7%A3%E5%86%B3hexo%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E9%97%AE%E9%A2%98/"/>
    <url>/2022/07/18/%E8%A7%A3%E5%86%B3hexo%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id="hexo-博客无法加载图片"><a href="#hexo-博客无法加载图片" class="headerlink" title="hexo 博客无法加载图片"></a>hexo 博客无法加载图片</h2><hr><ul><li><p>平台：win10 专业版 19044.1826</p></li><li><p>软件：</p><pre><code class="hljs"> - nodejs ：16.16.0 LTS - hexo ：6.2.0 - hexo-cli ：4.3.0 - Typora ：1.2.4</code></pre></li></ul><hr><p>前言：用hexo + Typora 的方式写博客，需要插入图片，无法利用直接插入的方法，博客无法顺利在网页显示，遂寻解决方法</p><hr><ol><li><p>下载插件</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">npm install https://github.com/CodeFalling/hexo-asset-image<br></code></pre></td></tr></table></figure></li><li><p>在你生成的博客的文件夹下找到 _config.yml 文件</p><p><img src="/2022/07/18/%E8%A7%A3%E5%86%B3hexo%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E9%97%AE%E9%A2%98/1.png" alt="1"></p></li><li><p>找到post_asset_folder，将false改为true 。它的作用是在你新建博客md文件时，同时建立一个同名的文件夹，用来存放图片</p><p><img src="/2022/07/18/%E8%A7%A3%E5%86%B3hexo%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E9%97%AE%E9%A2%98/2.png" alt="2"></p></li><li><p>再次输入指令即可预览，发现图片已经成功加载显示</p><p><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></p></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python | print函数</title>
    <link href="/2022/07/18/Python-print%E5%87%BD%E6%95%B0/"/>
    <url>/2022/07/18/Python-print%E5%87%BD%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="python笔记（1）"><a href="#python笔记（1）" class="headerlink" title="python笔记（1）"></a>python笔记（1）</h2><h4 id="print函数"><a href="#print函数" class="headerlink" title="print函数"></a>print函数</h4><h5 id="print-打印"><a href="#print-打印" class="headerlink" title="print:打印"></a>print:打印</h5><ul><li>作用：打印输出</li><li>在终端输出数据内容<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 输出字符串</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello world !&#x27;</span>)<br><span class="hljs-comment"># 进行运算输出</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">1</span>+<span class="hljs-number">2</span>)<br><span class="hljs-comment"># 直接输出数字</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">123</span>) <span class="hljs-comment">#整数</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">1.23</span>) <span class="hljs-comment">#小数</span><br><span class="hljs-comment"># 可以拼接多段内容输出</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello&#x27;</span>,<span class="hljs-string">&#x27;world&#x27;</span>)<br><span class="hljs-comment"># 将数据打印到文件里</span><br>fp=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;D:/text.txt&#x27;</span>,<span class="hljs-string">&#x27;a+&#x27;</span>) <span class="hljs-comment">#找到文本路径，打开文本。如果文本不存在则在该路径下创建文本并打开</span><br><span class="hljs-comment"># a+的意思是在该路径下文件没有就创建，有就在文件里面的内容的后边追加内容：前提是D盘存在且登录用户有权限读写</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello world !&#x27;</span>,file=fp) <span class="hljs-comment">#向文本写入数据</span><br>fp.close() <span class="hljs-comment">#关闭文件</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>demo</title>
    <link href="/2022/07/17/demo/"/>
    <url>/2022/07/17/demo/</url>
    
    <content type="html"><![CDATA[<p><img src="/2022/07/17/demo/python_%E5%90%8C%E6%96%87%E4%BB%B6%E5%A4%B9%E5%A4%9A%E4%BB%BB%E5%8A%A1%E4%B8%8D%E5%90%8C%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E5%88%9B%E5%BB%BA.png" alt="python_同文件夹多任务不同虚拟环境创建"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>个人博客搭建</title>
    <link href="/2022/07/17/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/07/17/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="卸载nodejs"><a href="#卸载nodejs" class="headerlink" title="卸载nodejs"></a>卸载nodejs</h2><ol><li>通过控制面板卸载node.js</li><li>删除安装所在文件夹下的nodejs文件夹</li><li>查看以下路径文件夹是否存在，有则删除<br>c:&#x2F;&#x2F;user&#x2F;xxx&#x2F;node_models<br>c:&#x2F;&#x2F;Program Fiels&#x2F;nodejs<br>c:&#x2F;&#x2F;user&#x2F;xxx&#x2F;AppData&#x2F;Roaming&#x2F;npm<br>c:&#x2F;&#x2F;user&#x2F;xxx&#x2F;AppData&#x2F;Roaming&#x2F;npm-cache</li><li>删除npm和node相关的所有环境变量</li><li><hr></li><li>查看AppData文件夹。打开电脑文件，点击查看，把隐藏的项目选上即可看到</li><li><hr></li></ol><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><ul><li>下载网址：<a href="https://www.nodejs.org/">https://www.nodejs.org</a></li><li>下载LTS即可，意为长期支持版</li><li>安装时自定义安装路径选除C盘以外的盘即可，其余点击next即可</li><li>安装完成，以管理员权限打开cmd或powershell，输出指令：node -v 和 npm -v 校验是否安装成功</li></ul><hr><ul><li>如果npm下载太慢，可将下载源换成淘宝源</li></ul><hr><h2 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h2><hr><h2 id="hexo的安装"><a href="#hexo的安装" class="headerlink" title="hexo的安装"></a>hexo的安装</h2><ul><li>以管理员权限打开cmd或powershell，输出指令：npm install -g hexo-cli</li><li>-g : 意为全局安装</li><li>校验是否安装成功：hexo -v</li></ul><hr><h2 id="创建GitHub仓库"><a href="#创建GitHub仓库" class="headerlink" title="创建GitHub仓库"></a>创建GitHub仓库</h2><ul><li>创建名称为：xxx.github.io</li><li>xxx为你的GitHub用户名</li></ul><hr><h2 id="创建ssh密匙"><a href="#创建ssh密匙" class="headerlink" title="创建ssh密匙"></a>创建ssh密匙</h2><ul><li>打开git bash</li><li>输入指令：ssh-keygen -t rsa -C “<a href="mailto:&#120;&#120;&#x78;&#64;&#x65;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#111;&#109;">&#120;&#120;&#x78;&#64;&#x65;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#111;&#109;</a>“</li><li>xxx ：你的邮箱名字</li><li>Email ：所用邮箱</li><li>例 ：<a href="mailto:&#120;&#120;&#120;&#x40;&#x31;&#x36;&#51;&#46;&#x63;&#111;&#109;">&#120;&#120;&#120;&#x40;&#x31;&#x36;&#51;&#46;&#x63;&#111;&#109;</a></li><li>查看sshkey</li><li>指令：cat ~&#x2F;.ssh&#x2F;id_rsa.pub</li><li>复制sshkey</li><li>添加到github</li><li>点击头像，选择 Settings<br>选择 SHH and GPG keys<br>点击 New SSH key<br>填入 SSH KEY<br>点击 Add SSH key</li><li>输入以下指令测试：ssh -T <a href="mailto:&#103;&#x69;&#x74;&#x40;&#x67;&#105;&#x74;&#x68;&#x75;&#98;&#x2e;&#99;&#111;&#x6d;">&#103;&#x69;&#x74;&#x40;&#x67;&#105;&#x74;&#x68;&#x75;&#98;&#x2e;&#99;&#111;&#x6d;</a></li><li>sshkey本地存放路径：C:\Users\xxx\ .ssh</li><li>为什么要配置这个?因为提交代码要拥有你的github权限，但是直接使用用户名和密码不安全，所以我们使用ssh key来解决本地和服务器的连接问题。<br>简单的来说就是给予你当前电脑访问你GitHub 仓库的权限</li></ul><hr><h2 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h2><ul><li>新建文件夹，在git bash 中进入你新建文件夹的路径</li><li>初始化指令：hexo init</li></ul><hr><ul><li>出现错误<br>INFO  Cloning hexo-starter <a href="https://github.com/hexojs/hexo-starter.git">https://github.com/hexojs/hexo-starter.git</a><br>fatal: unable to access ‘<a href="https://github.com/hexojs/hexo-starter.git/&#39;">https://github.com/hexojs/hexo-starter.git/&#39;</a>: SSL certificate problem: unable to get local issuer certificate<br>WARN  git clone failed. Copying data instead<br>FATAL {<br>err: [Error: EPERM: operation not permitted, mkdir ‘D:&#39;] {<br>  errno: -4048,<br>  code: ‘EPERM’,<br>  syscall: ‘mkdir’,<br>  path: ‘D:\‘<br>}<br>} Something’s wrong. Maybe you can find the solution here: %s <a href="http://hexo.io/docs/troubleshooting.html">http://hexo.io/docs/troubleshooting.html</a></li></ul><hr><ul><li>以上错误解决办法</li><li>选择nodejs安装文件夹，打开属性，点击安全，点击编辑，选择users，点击允许完全控制，确定</li><li>重启电脑使配置生效</li><li>再次输入指令即可成功</li><li>如果还是出现以上错误可输入指令：hexo init blog</li><li>blog : 为文件夹名字</li></ul><hr><ul><li>在你建立的博客文件夹下打开git bash</li><li>生成静态文件，指令：hexo g</li><li>启动博客，指令：hexo s</li><li>出现 <a href="http://localhost:4000/">http://localhost:4000/</a></li><li>将链接用浏览器打开，即可看到你的博客</li></ul><hr><h2 id="将博客部署到github"><a href="#将博客部署到github" class="headerlink" title="将博客部署到github"></a>将博客部署到github</h2><ul><li>下载插件hexo-deployer-git</li><li>指令：npm install hexo-deployer-git –save</li><li>在你博客文件夹中找到_config.yml文件打开</li><li>拉到最下面，修改为</li><li>deploy:<br>type: git<br>repo: <a href="mailto:&#x67;&#105;&#x74;&#64;&#103;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#99;&#x6f;&#x6d;">&#x67;&#105;&#x74;&#64;&#103;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#99;&#x6f;&#x6d;</a>:xxx&#x2F;xxx.github.io.git<br>branch: main</li><li>repo即刚刚建立的仓库的SSH链接</li><li>注：记得在冒号后空一格</li></ul><hr><ul><li>在推送前输入邮箱和名字</li><li>指令：git config –global user.email “xxx”</li><li>xxx为你的GitHub邮箱</li><li>git config –global user.name “xxx”</li><li>xxx为你的GitHub名字</li><li>注：如果有打开加速节点的请先关闭</li><li>输入命令：hexo d</li><li>在仓库可见已成功推送，部署成功</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/07/17/hello-world/"/>
    <url>/2022/07/17/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
